{"version":3,"sources":["../../js/ball.js"],"names":["Ball","cfg","pos","Vect2D","px","py","vet","vx","vy","rad","mass","color","mouseOn","selected","ctx","beginPath","fillStyle","arc","x","y","Math","PI","fill","font","fillText","toString","mx","my","width","height","invertX","invertY","ball","dx","dy","sqrt","b1","b2","dist","angle","atan2","abs","nvt1","length","nvt2","dir1","dir2","vtx1","cos","vty1","sin","vtx2","vty2","fvx1","fvx2","round","V_MIN","rand_color","move","FRICTION","add"],"mappings":"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","file":"ball.js","sourcesContent":["/**\n * Created by antoine on 28/01/17.\n */\n\n// BALL\nclass Ball {\n    constructor(cfg) {\n\n        this.pos = new Vect2D(cfg.px, cfg.py);\n        this.vet = new Vect2D(cfg.vx, cfg.vy);\n\n        this.rad   = cfg.rad;\n        this.mass  = cfg.mass;\n        this.color = cfg.color;\n\n        this.mouseOn  = false;\n        this.selected = false;\n\n    }\n\n    get x ()    { return this.pos.x }\n    get y ()    { return this.pos.y }\n    set x (x)   { this.pos.x = x }\n    set y (y)   { this.pos.y = y }\n    get vx ()   { return this.vet.x }\n    get vy ()   { return this.vet.y }\n    set vx (vx) { this.vet.x = vx }\n    set vy (vy) { this.vet.y = vy }\n\n    draw (ctx) {\n        if (this.mouseOn) {\n            ctx.beginPath();\n            ctx.fillStyle = \"white\";\n            ctx.arc(this.x, this.y, this.rad+1, 0, 2*Math.PI);\n            ctx.fill();\n        }\n        ctx.beginPath();\n        ctx.fillStyle = this.selected ? \"yellow\" : this.color;\n        ctx.arc(this.x, this.y, this.rad, 0, 2*Math.PI);\n        ctx.fill();\n        ctx.fillStyle = \"white\";\n        ctx.font = \"14px Arial\";\n        ctx.fillText(this.vet.toString(), this.x-30, this.y+this.rad+15);\n    }\n\n    mouseIsOn (mx, my) {\n        return mx >= this.x - this.rad && mx <= this.x + this.rad\n            && my >= this.y - this.rad && my <= this.y + this.rad;\n    }\n\n    wallCollision (width, height) {\n        if (this.x - this.rad < 0) {\n            this.x = this.rad;\n            this.vet.invertX();\n        } else if (this.x + this.rad > width) {\n            this.x = width - this.rad;\n            this.vet.invertX();\n        }\n        if (this.y - this.rad < 0) {\n            this.y = this.rad;\n            this.vet.invertY();\n        } else if (this.y + this.rad > height) {\n            this.y = height - this.rad;\n            this.vet.invertY();\n        }\n    }\n\n    getDist (ball) {\n        let dx = (this.x - ball.x) * (this.x - ball.x),\n            dy = (this.y - ball.y) * (this.y - ball.y);\n        return Math.sqrt(dx + dy);\n    }\n\n    resolveCollision(ball) {\n        let b1 = this, b2 = ball,\n            dx = b1.x - b2.x,\n            dy = b1.y - b2.y,\n            dist  = Math.sqrt(dx * dx + dy * dy),\n            angle = Math.atan2(dy, dx);\n\n        if (Math.abs(dx) + Math.abs(dy) != 0 && dist < b1.rad + b2.rad - 2) {\n            let nvt1 = b1.vet.length(),\n                nvt2 = b2.vet.length(),\n                dir1 = Math.atan2(b1.vet.y, b1.vet.x),\n                dir2 = Math.atan2(b2.vet.y, b2.vet.x),\n                vtx1 = nvt1 * Math.cos(dir1 - angle),\n                vty1 = nvt1 * Math.sin(dir1 - angle),\n                vtx2 = nvt2 * Math.cos(dir2 - angle),\n                vty2 = nvt2 * Math.sin(dir2 - angle),\n                fvx1 = ((b1.rad - b2.rad) * vtx1 + (2 * b2.rad) * vtx2) / (b1.rad + b2.rad),\n                fvx2 = ((2 * b1.rad) * vtx1 + (b2.rad - b1.rad) * vtx2) / (b1.rad + b2.rad);\n\n            b1.vet.x = Math.cos(angle) * fvx1 + Math.cos(angle + Math.PI / 2) * vty1;\n            b1.vet.y = Math.sin(angle) * fvx1 + Math.sin(angle + Math.PI / 2) * vty1;\n            b2.vet.x = Math.cos(angle) * fvx2 + Math.cos(angle + Math.PI / 2) * vty2;\n            b2.vet.y = Math.sin(angle) * fvx2 + Math.sin(angle + Math.PI / 2) * vty2;\n\n            b1.vet.round(cfg.V_MIN);\n            b2.vet.round(cfg.V_MIN);\n\n            // b1.move();\n            // b2.move();\n\n            b1.color = rand_color();\n            b2.color = rand_color();\n\n        } else if (dist == this.rad + ball.rad) {\n            this.move();\n        }\n    }\n\n    applyFriction () {\n        if (cfg.FRICTION != 0) {\n            if (this.vx != 0) this.vx = this.vx * cfg.FRICTION;\n            if (this.vy != 0) this.vy = this.vy * cfg.FRICTION;\n            if (Math.abs(this.vx) <= 0.1) this.vx = 0;\n            if (Math.abs(this.vy) <= 0.1) this.vy = 0;\n            this.vet.round(cfg.V_MIN);\n        }\n    }\n\n    move () {\n        this.pos.add(this.vet);\n    }\n}\n"]}