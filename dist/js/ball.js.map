{"version":3,"sources":["../../js/ball.js"],"names":["Ball","cfg","pos","Vect2D","px","py","vet","vx","vy","rad","mass","color","mouseOn","selected","ctx","drawCircle","x","y","circleColor","COLORS","orange","fillStyle","font","fillText","toString","mx","my","width","height","RADIUS","invertX","invertY","console","log","ball","dx","dy","Math","sqrt","b1","b2","dist","angle","atan2","abs","nvt1","length","nvt2","dir1","dir2","vtx1","cos","vty1","sin","vtx2","vty2","fvx1","fvx2","PI","round","V_MIN","move","FRICTION","add"],"mappings":"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","file":"ball.js","sourcesContent":["/**\n * Created by antoine on 28/01/17.\n */\n\n// BALL\nclass Ball {\n    constructor(cfg) {\n\n        this.pos = new Vect2D(cfg.px, cfg.py);\n        this.vet = new Vect2D(cfg.vx, cfg.vy);\n\n        this.rad   = cfg.rad;\n        this.mass  = cfg.mass;\n        this.color = cfg.color;\n\n        this.mouseOn  = false;\n        this.selected = false;\n\n    }\n\n    get x ()    { return this.pos.x }\n    get y ()    { return this.pos.y }\n    set x (x)   { this.pos.x = x }\n    set y (y)   { this.pos.y = y }\n    get vx ()   { return this.vet.x }\n    get vy ()   { return this.vet.y }\n    set vx (vx) { this.vet.x = vx }\n    set vy (vy) { this.vet.y = vy }\n\n    draw (ctx) {\n        if (this.mouseOn) drawCircle(ctx, this.x, this.y, this.rad+1, \"white\");\n        let circleColor = this.selected ? COLORS.orange : this.color;\n        drawCircle(ctx, this.x, this.y, this.rad, circleColor);\n        ctx.fillStyle = \"white\";\n        ctx.font = \"9px Arial\";\n        ctx.fillText(this.vet.toString(), this.x-30, this.y+this.rad+15);\n    }\n\n    mouseIsOn (mx, my) {\n        return mx >= this.x - this.rad && mx <= this.x + this.rad\n            && my >= this.y - this.rad && my <= this.y + this.rad;\n    }\n\n    wallCollision (width, height) {\n        if (this.x - this.rad < cfg.RADIUS) {\n            this.x = this.rad*2;\n            this.vet.invertX();\n        } else if (this.x + this.rad > width-cfg.RADIUS*2) {\n            this.x = width - this.rad*3;\n            this.vet.invertX();\n        }\n        if (this.y - this.rad < cfg.RADIUS) {\n            this.y = this.rad*2;\n            this.vet.invertY();\n        } else if (this.y + this.rad > height-cfg.RADIUS*2) {\n            this.y = height - this.rad*3;\n            this.vet.invertY();\n        }\n    }\n\n    getVelocity() {\n        console.log(\"Velocity!\");\n    }\n\n    getDist(ball) {\n        let dx = (this.x - ball.x) * (this.x - ball.x),\n            dy = (this.y - ball.y) * (this.y - ball.y);\n        return Math.sqrt(dx + dy);\n    }\n\n    resolveCollision(ball) {\n        let b1 = this, b2 = ball,\n            dx = b1.x - b2.x,\n            dy = b1.y - b2.y,\n            dist  = Math.sqrt(dx * dx + dy * dy),\n            angle = Math.atan2(dy, dx);\n\n        if (Math.abs(dx) + Math.abs(dy) != 0 && dist < b1.rad + b2.rad - 2) {\n            let nvt1 = b1.vet.length(),\n                nvt2 = b2.vet.length(),\n                dir1 = Math.atan2(b1.vet.y, b1.vet.x),\n                dir2 = Math.atan2(b2.vet.y, b2.vet.x),\n                vtx1 = nvt1 * Math.cos(dir1 - angle),\n                vty1 = nvt1 * Math.sin(dir1 - angle),\n                vtx2 = nvt2 * Math.cos(dir2 - angle),\n                vty2 = nvt2 * Math.sin(dir2 - angle),\n                fvx1 = ((b1.rad - b2.rad) * vtx1 + (2 * b2.rad) * vtx2) / (b1.rad + b2.rad),\n                fvx2 = ((2 * b1.rad) * vtx1 + (b2.rad - b1.rad) * vtx2) / (b1.rad + b2.rad);\n\n            b1.vet.x = Math.cos(angle) * fvx1 + Math.cos(angle + Math.PI / 2) * vty1;\n            b1.vet.y = Math.sin(angle) * fvx1 + Math.sin(angle + Math.PI / 2) * vty1;\n            b2.vet.x = Math.cos(angle) * fvx2 + Math.cos(angle + Math.PI / 2) * vty2;\n            b2.vet.y = Math.sin(angle) * fvx2 + Math.sin(angle + Math.PI / 2) * vty2;\n\n            b1.vet.round(cfg.V_MIN);\n            b2.vet.round(cfg.V_MIN);\n\n            // b1.move();\n            // b2.move();\n\n            // b1.color = rand_color();\n            // b2.color = rand_color();\n\n        } else if (dist == this.rad + ball.rad) {\n            this.move();\n        }\n    }\n\n    applyFriction () {\n        if (cfg.FRICTION != 0) {\n            if (this.vx != 0) this.vx = this.vx * cfg.FRICTION;\n            if (this.vy != 0) this.vy = this.vy * cfg.FRICTION;\n            if (Math.abs(this.vx) <= 0.1) this.vx = 0;\n            if (Math.abs(this.vy) <= 0.1) this.vy = 0;\n            this.vet.round(cfg.V_MIN);\n        }\n    }\n\n    move () {\n        this.pos.add(this.vet);\n    }\n}\n"]}