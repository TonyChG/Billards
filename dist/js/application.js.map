{"version":3,"sources":["../../js/application.js"],"names":["App","cvs","height","window","innerHeight","width","innerWidth","render","getContext","balls","BallSet","init","interval","cfg","FPS","then","Date","now","addEventListener","handleMouseMove","e","clientX","clientY","handleMouseDown","mx","my","n","len","length","list","mouseOn","mouseIsOn","i","ball","isAnySelectBall","selected","mouseNotOnAnyBall","vx","x","vy","y","unSelectBalls","updateMouseOn","delta","requestAnimationFrame","update","bind","fillStyle","fillRect","drawBalls","computeCollision"],"mappings":";;;;;;AAAA;;;;IAIMA,G;AAEF,iBAAYC,GAAZ,EAAiB;AAAA;;AACb,aAAKA,GAAL,GAAcA,GAAd;AACA,aAAKC,MAAL,GAAcC,OAAOC,WAArB;AACA,aAAKC,KAAL,GAAcF,OAAOG,UAArB;AACA,aAAKC,MAAL,GAAcN,IAAIO,UAAJ,CAAe,IAAf,CAAd;AACA,aAAKC,KAAL,GAAc,IAAIC,OAAJ,CAAY,KAAKL,KAAjB,EAAwB,KAAKH,MAA7B,EAAqC,KAAKK,MAA1C,EAAkDI,IAAlD,EAAd;AACA,aAAKC,QAAL,GAAgB,OAAOC,IAAIC,GAA3B;AACA,aAAKC,IAAL,GAAYC,KAAKC,GAAL,EAAZ;AACH;;;;+BAEO;AAAA;;AACJ,iBAAKhB,GAAL,CAASiB,gBAAT,CAA0B,WAA1B,EAAuC;AAAA,uBAAK,MAAKC,eAAL,CAAqBC,EAAEC,OAAvB,EAAgCD,EAAEE,OAAlC,CAAL;AAAA,aAAvC;AACA,iBAAKrB,GAAL,CAASiB,gBAAT,CAA0B,WAA1B,EAAuC;AAAA,uBAAK,MAAKK,eAAL,CAAqBH,EAAEC,OAAvB,EAAgCD,EAAEE,OAAlC,CAAL;AAAA,aAAvC;AACH;;;wCAEgBE,E,EAAIC,E,EAAI;AACrB,iBAAK,IAAIC,IAAI,CAAR,EAAWC,MAAM,KAAKlB,KAAL,CAAWmB,MAAjC,EAAyCF,IAAIC,GAA7C,EAAkDD,GAAlD,EAAuD;AACnD,qBAAKjB,KAAL,CAAWoB,IAAX,CAAgBH,CAAhB,EAAmBI,OAAnB,GAA6B,CAAC,CAAC,KAAKrB,KAAL,CAAWoB,IAAX,CAAgBH,CAAhB,EAAmBK,SAAnB,CAA6BP,EAA7B,EAAiCC,EAAjC,CAA/B;AACH;AACJ;;;wCAEgBD,E,EAAIC,E,EAAI;AACrB,iBAAK,IAAIO,IAAI,CAAR,EAAWL,MAAM,KAAKlB,KAAL,CAAWoB,IAAX,CAAgBD,MAAtC,EAA8CI,IAAIL,GAAlD,EAAuDK,GAAvD,EAA4D;AACxD,oBAAIC,OAAO,KAAKxB,KAAL,CAAWoB,IAAX,CAAgBG,CAAhB,CAAX;AACA,oBAAI,KAAKvB,KAAL,CAAWyB,eAAX,MAAgCD,KAAKE,QAAzC,EAAmD;AAC/C,wBAAI,KAAK1B,KAAL,CAAW2B,iBAAX,EAAJ,EAAoC;AAChCH,6BAAKI,EAAL,IAAW,CAACb,KAAKS,KAAKK,CAAX,IAAgB,EAA3B;AACAL,6BAAKM,EAAL,IAAW,CAACd,KAAKQ,KAAKO,CAAX,IAAgB,EAA3B;AACH;AACJ;AACJ;AACD,iBAAK/B,KAAL,CAAWgC,aAAX;AACA,iBAAKhC,KAAL,CAAWiC,aAAX;AACH;;;iCAES;AACN,gBAAIzB,MAAMD,KAAKC,GAAL,EAAV;AAAA,gBACI0B,QAAQ1B,MAAM,KAAKF,IADvB;;AAGA6B,kCAAsB,KAAKC,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAtB;;AAEA,gBAAIH,QAAQ,KAAK/B,QAAjB,EAA2B;;AAEvB,qBAAKG,IAAL,GAAYE,MAAO0B,QAAQ,KAAK/B,QAAhC;;AAEA,qBAAKL,MAAL,CAAYwC,SAAZ,GAAwB,OAAxB;AACA,qBAAKxC,MAAL,CAAYyC,QAAZ,CAAqB,CAArB,EAAwB,CAAxB,EAA2B,KAAK3C,KAAhC,EAAuC,KAAKH,MAA5C;;AAEA,qBAAKO,KAAL,CAAWwC,SAAX;AACA,qBAAKxC,KAAL,CAAWyC,gBAAX;AACH;AACJ","file":"application.js","sourcesContent":["/**\n * Created by antoine on 28/01/17.\n */\n\nclass App {\n\n    constructor(cvs) {\n        this.cvs    = cvs;\n        this.height = window.innerHeight;\n        this.width  = window.innerWidth;\n        this.render = cvs.getContext(\"2d\");\n        this.balls  = new BallSet(this.width, this.height, this.render).init();\n        this.interval = 1000 / cfg.FPS;\n        this.then = Date.now();\n    }\n\n    init () {\n        this.cvs.addEventListener(\"mousemove\", e => this.handleMouseMove(e.clientX, e.clientY));\n        this.cvs.addEventListener(\"mousedown\", e => this.handleMouseDown(e.clientX, e.clientY));\n    }\n\n    handleMouseMove (mx, my) {\n        for (let n = 0, len = this.balls.length; n < len; n++) {\n            this.balls.list[n].mouseOn = !!this.balls.list[n].mouseIsOn(mx, my);\n        }\n    }\n\n    handleMouseDown (mx, my) {\n        for (let i = 0, len = this.balls.list.length; i < len; i++) {\n            let ball = this.balls.list[i];\n            if (this.balls.isAnySelectBall() && ball.selected) {\n                if (this.balls.mouseNotOnAnyBall()) {\n                    ball.vx += (mx - ball.x) / 10;\n                    ball.vy += (my - ball.y) / 10;\n                }\n            }\n        }\n        this.balls.unSelectBalls();\n        this.balls.updateMouseOn();\n    }\n\n    update () {\n        let now = Date.now(),\n            delta = now - this.then;\n\n        requestAnimationFrame(this.update.bind(this));\n\n        if (delta > this.interval) {\n\n            this.then = now - (delta % this.interval);\n\n            this.render.fillStyle = \"black\";\n            this.render.fillRect(0, 0, this.width, this.height);\n\n            this.balls.drawBalls();\n            this.balls.computeCollision();\n        }\n    }\n}"]}